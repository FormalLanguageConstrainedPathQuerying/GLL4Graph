///*
// * Copyright (c) 2015, Ali Afroozeh and Anastasia Izmaylova, Centrum Wiskunde & Informatica (CWI)
// * All rights reserved.
// *
// * Redistribution and use in source and binary forms, with or without
// * modification, are permitted provided that the following conditions are met:
// *
// * 1. Redistributions of source code must retain the above copyright notice, this
// *    list of conditions and the following disclaimer.
// *
// * 2. Redistributions in binary form must reproduce the above copyright notice, this
// *    list of conditions and the following disclaimer in the documentation and/or
// *    other materials provided with the distribution.
// *
// * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
// * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
// * OF SUCH DAMAGE.
// *
// */
//
//package org.iguana.parser.datadependent.preprocess;
//
//import static org.iguana.grammar.symbol.LayoutStrategy.NO_LAYOUT;
//import static org.iguana.util.CollectionsUtil.set;
//
//import org.iguana.datadependent.ast.AST;
//import org.iguana.grammar.Grammar;
//import org.iguana.grammar.condition.ConditionType;
//import org.iguana.grammar.condition.RegularExpressionCondition;
//import org.iguana.grammar.symbol.Associativity;
//import org.iguana.regex.Character;
//import org.iguana.regex.CharacterRange;
//import org.iguana.grammar.symbol.IfThenElse;
//import org.iguana.grammar.symbol.Nonterminal;
//import org.iguana.grammar.symbol.PrecedenceLevel;
//import org.iguana.grammar.symbol.Recursion;
//import org.iguana.grammar.symbol.Rule;
//import org.iguana.grammar.symbol.Terminal;
//import org.iguana.regex.Alt;
//import org.iguana.regex.Opt;
//import org.iguana.regex.Plus;
//import org.iguana.regex.Sequence;
//import org.iguana.regex.Star;
//
//public class Preprocessor {
//	public static Grammar grammar =
//		Grammar.builder()
//		.setLayout(Nonterminal.builder("Layout").build())
//		// Comment ::= DelimitedComment  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Comment").build()).addSymbol(Nonterminal.builder("DelimitedComment").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Comment ::= SingleLineComment  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Comment").build()).addSymbol(Nonterminal.builder("SingleLineComment").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// ExponentPart ::= (E | e) Sign? DecimalDigit+  !>>  (0-9)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("ExponentPart").build()).addSymbol(Alt.builder(CharacterRange.builder(69, 69).build(), CharacterRange.builder(101, 101).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Sign").build()).build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// QuoteEscapeSequence ::= " "  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("QuoteEscapeSequence").build()).addSymbol(Character.builder(34).build()).addSymbol(Character.builder(34).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// InputCharacter ::= (\u0001-\u10FFFF)  \  ((\\u000A | \\u000D))  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("InputCharacter").build()).addSymbol(Alt.builder(CharacterRange.builder(1, 1114111).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Alt.builder(CharacterRange.builder(10, 10).build(), CharacterRange.builder(13, 13).build()).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// InputCharacter ::= \u0000  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("InputCharacter").build()).addSymbol(Character.builder(0).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerLiteral_ ::= HexadecimalIntegerLiteral  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerLiteral_").build()).addSymbol(Nonterminal.builder("HexadecimalIntegerLiteral").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerLiteral_ ::= DecimalIntegerLiteral  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerLiteral_").build()).addSymbol(Nonterminal.builder("DecimalIntegerLiteral").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// LineIndicator ::= DecimalDigit+ Whitespace FileName  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("LineIndicator").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("FileName").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// LineIndicator ::= (h i d d e n)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("LineIndicator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(104).build(), Character.builder(105).build(), Character.builder(100).build(), Character.builder(100).build(), Character.builder(101).build(), Character.builder(110).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// LineIndicator ::= DecimalDigit+  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("LineIndicator").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// LineIndicator ::= (d e f a u l t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("LineIndicator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(102).build(), Character.builder(97).build(), Character.builder(117).build(), Character.builder(108).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DPpConditional ::= DPpIfSection  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DPpConditional").build()).addSymbol(Nonterminal.builder("DPpIfSection").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpEqualityExpression ::= PpEqualityExpression Whitespace? (= =) Whitespace? PpUnaryExpression  {UNDEFINED,1,LEFT_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpEqualityExpression").build()).addSymbol(Nonterminal.builder("PpEqualityExpression").build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(61).build(), Character.builder(61).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Nonterminal.builder("PpUnaryExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.LEFT_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// PpEqualityExpression ::= PpUnaryExpression  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpEqualityExpression").build()).addSymbol(Nonterminal.builder("PpUnaryExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// PpEqualityExpression ::= PpEqualityExpression Whitespace? (! =) Whitespace? PpUnaryExpression  {UNDEFINED,1,LEFT_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpEqualityExpression").build()).addSymbol(Nonterminal.builder("PpEqualityExpression").build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(33).build(), Character.builder(61).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Nonterminal.builder("PpUnaryExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.LEFT_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// NotSlashOrAsterisk ::= (\u0001-\u10FFFF)  \  ((* | /))  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("NotSlashOrAsterisk").build()).addSymbol(Alt.builder(CharacterRange.builder(1, 1114111).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Alt.builder(CharacterRange.builder(42, 42).build(), CharacterRange.builder(47, 47).build()).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpOrExpression ::= PpOrExpression Whitespace? (| |) Whitespace? PpAndExpression  {UNDEFINED,1,LEFT_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpOrExpression").build()).addSymbol(Nonterminal.builder("PpOrExpression").build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(124).build(), Character.builder(124).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Nonterminal.builder("PpAndExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.LEFT_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// PpOrExpression ::= PpAndExpression  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpOrExpression").build()).addSymbol(Nonterminal.builder("PpAndExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// PpUnaryExpression ::= (!) Whitespace? PpUnaryExpression  {UNDEFINED,1,RIGHT_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpUnaryExpression").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(33).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Nonterminal.builder("PpUnaryExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.RIGHT_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,true,false,false,false)).build())
//		// PpUnaryExpression ::= PpPrimaryExpression  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpUnaryExpression").build()).addSymbol(Nonterminal.builder("PpPrimaryExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,true,false,false,false)).build())
//		// PpDeclaration ::= (#) Whitespace? ((u n d e f) | (d e f i n e)) Whitespace ConditionalSymbol PpNewLine  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpDeclaration").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Alt.builder(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(110).build(), Character.builder(100).build(), Character.builder(101).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(102).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(101).build()).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("ConditionalSymbol").build()).addSymbol(Nonterminal.builder("PpNewLine").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IdentifierPartCharacter ::= LetterCharacter  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IdentifierPartCharacter").build()).addSymbol(Nonterminal.builder("LetterCharacter").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IdentifierPartCharacter ::= DecimalDigitCharacter  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IdentifierPartCharacter").build()).addSymbol(Nonterminal.builder("DecimalDigitCharacter").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IdentifierPartCharacter ::= (_)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IdentifierPartCharacter").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(95).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// WhitespaceNoNL ::= (\u0009 | \u000C | \u0020)+  !>>  (\u0009 | \u000C | \u0020)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("WhitespaceNoNL").build()).addSymbol(Plus.builder(Alt.builder(CharacterRange.builder(9, 9).build(), CharacterRange.builder(12, 12).build(), CharacterRange.builder(32, 32).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(9, 9).build(), CharacterRange.builder(12, 12).build(), CharacterRange.builder(32, 32).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// LetterCharacter ::= (A-Z | a-z)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("LetterCharacter").build()).addSymbol(Alt.builder(CharacterRange.builder(65, 90).build(), CharacterRange.builder(97, 122).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SkippedCharacters ::= (\u0001-" | $-\u10FFFF)  \  ((\u0009-\\u000A | \u000C-\\u000D | \u0020 | /))  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SkippedCharacters").build()).addSymbol(Alt.builder(CharacterRange.builder(1, 34).build(), CharacterRange.builder(36, 1114111).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Alt.builder(CharacterRange.builder(9, 10).build(), CharacterRange.builder(12, 13).build(), CharacterRange.builder(32, 32).build(), CharacterRange.builder(47, 47).build()).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SkippedCharacters ::= /  !>>  /  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SkippedCharacters").build()).addSymbol(Character.builder(47).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(47).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// VerbatimStringLiteralCharacter ::= SingleVerbatimStringLiteralCharacter  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("VerbatimStringLiteralCharacter").build()).addSymbol(Nonterminal.builder("SingleVerbatimStringLiteralCharacter").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// VerbatimStringLiteralCharacter ::= QuoteEscapeSequence  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("VerbatimStringLiteralCharacter").build()).addSymbol(Nonterminal.builder("QuoteEscapeSequence").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ \  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(92).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ n  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(110).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ '  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(39).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ f  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(102).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ a  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(97).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ "  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(34).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ 0  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(48).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ r  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(114).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ b  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(98).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ t  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(116).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SimpleEscapeSequence ::= \ v  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SimpleEscapeSequence").build()).addSymbol(Character.builder(92).build()).addSymbol(Character.builder(118).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpNewLine ::= WhitespaceNoNL? SingleLineComment? NewLine  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpNewLine").build()).addSymbol(Opt.builder(Nonterminal.builder("WhitespaceNoNL").build()).build()).addSymbol(Opt.builder(Nonterminal.builder("SingleLineComment").build()).build()).addSymbol(Nonterminal.builder("NewLine").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// HexadecimalIntegerLiteral ::= 0 (X | x) HexDigit+ IntegerTypeSuffix  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("HexadecimalIntegerLiteral").build()).addSymbol(Character.builder(48).build()).addSymbol(Alt.builder(CharacterRange.builder(88, 88).build(), CharacterRange.builder(120, 120).build()).build()).addSymbol(Plus.builder(Nonterminal.builder("HexDigit").build()).build()).addSymbol(Nonterminal.builder("IntegerTypeSuffix").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// HexadecimalIntegerLiteral ::= 0 (X | x) HexDigit+  !>>  (u L)  !>>  (u l)  !>>  (U l)  !>>  (U L)  !>>  (0-9 | A-F | L | U | a-f | l | u)  !>>  (l U)  !>>  (l u)  !>>  (L u)  !>>  (L U)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("HexadecimalIntegerLiteral").build()).addSymbol(Character.builder(48).build()).addSymbol(Alt.builder(CharacterRange.builder(88, 88).build(), CharacterRange.builder(120, 120).build()).build()).addSymbol(Plus.builder(Nonterminal.builder("HexDigit").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(76).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(108).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(85).build(), Character.builder(108).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(85).build(), Character.builder(76).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 70).build(), CharacterRange.builder(76, 76).build(), CharacterRange.builder(85, 85).build(), CharacterRange.builder(97, 102).build(), CharacterRange.builder(108, 108).build(), CharacterRange.builder(117, 117).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(85).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(117).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(76).build(), Character.builder(117).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(76).build(), Character.builder(85).build()).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// HexDigit ::= (0-9 | A-F | a-f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("HexDigit").build()).addSymbol(Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 70).build(), CharacterRange.builder(97, 102).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SkippedSectionPart ::= PpDirective  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SkippedSectionPart").build()).addSymbol(Nonterminal.builder("PpDirective").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SkippedSectionPart ::= SingleLineComment  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SkippedSectionPart").build()).addSymbol(Nonterminal.builder("SingleLineComment").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SkippedSectionPart ::= WhitespaceNoNL  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SkippedSectionPart").build()).addSymbol(Nonterminal.builder("WhitespaceNoNL").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SkippedSectionPart ::= SkippedCharacters  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SkippedSectionPart").build()).addSymbol(Nonterminal.builder("SkippedCharacters").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SkippedSectionPart ::= NewLine  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SkippedSectionPart").build()).addSymbol(Nonterminal.builder("NewLine").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IdentifierStartCharacter ::= (_)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IdentifierStartCharacter").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(95).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IdentifierStartCharacter ::= LetterCharacter  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IdentifierStartCharacter").build()).addSymbol(Nonterminal.builder("LetterCharacter").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// FileNameCharacter ::= (\u0001-\u10FFFF)  \  (")  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("FileNameCharacter").build()).addSymbol(Alt.builder(CharacterRange.builder(1, 1114111).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Character.builder(34).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (b a s e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (e x p l i c i t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(120).build(), Character.builder(112).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (v i r t u a l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(105).build(), Character.builder(114).build(), Character.builder(116).build(), Character.builder(117).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (f o r)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(111).build(), Character.builder(114).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (b r e a k)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(107).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s t r i n g)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (i m p l i c i t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(109).build(), Character.builder(112).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (n a m e s p a c e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(97).build(), Character.builder(109).build(), Character.builder(101).build(), Character.builder(115).build(), Character.builder(112).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (t y p e o f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(121).build(), Character.builder(112).build(), Character.builder(101).build(), Character.builder(111).build(), Character.builder(102).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (e v e n t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(118).build(), Character.builder(101).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (t h i s)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(104).build(), Character.builder(105).build(), Character.builder(115).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (c a t c h)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (i n t e r n a l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(110).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (b o o l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(111).build(), Character.builder(111).build(), Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (t h r o w)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(104).build(), Character.builder(114).build(), Character.builder(111).build(), Character.builder(119).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (u n c h e c k e d)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(110).build(), Character.builder(99).build(), Character.builder(104).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (r e a d o n l y)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(100).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(108).build(), Character.builder(121).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (f l o a t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(97).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (f o r e a c h)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (d e f a u l t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(102).build(), Character.builder(97).build(), Character.builder(117).build(), Character.builder(108).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (p u b l i c)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(117).build(), Character.builder(98).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s t a t i c)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(99).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (l o n g)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (e x t e r n)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(120).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(110).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (p r o t e c t e d)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(114).build(), Character.builder(111).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (c h e c k e d)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(104).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (o v e r r i d e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(118).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(100).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s t r u c t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (d o u b l e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(111).build(), Character.builder(117).build(), Character.builder(98).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (i n t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s b y t e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(98).build(), Character.builder(121).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s w i t c h)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(119).build(), Character.builder(105).build(), Character.builder(116).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (o b j e c t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(98).build(), Character.builder(106).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (c a s e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (w h i l e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(119).build(), Character.builder(104).build(), Character.builder(105).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (o u t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(117).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s e a l e d)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (u i n t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (c h a r)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(104).build(), Character.builder(97).build(), Character.builder(114).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (d e c i m a l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(109).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (c o n s t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(115).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (f i x e d)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(105).build(), Character.builder(120).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (r e f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(102).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (u s i n g)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(115).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (d o)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(111).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (c o n t i n u e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (o p e r a t o r)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(112).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(111).build(), Character.builder(114).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (a s)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(97).build(), Character.builder(115).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (a b s t r a c t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(97).build(), Character.builder(98).build(), Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (u l o n g)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s h o r t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(104).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (p r i v a t e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(118).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (v o l a t i l e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(111).build(), Character.builder(108).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (p a r a m s)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(97).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(109).build(), Character.builder(115).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (t r u e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s i z e o f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(105).build(), Character.builder(122).build(), Character.builder(101).build(), Character.builder(111).build(), Character.builder(102).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (d e l e g a t e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(108).build(), Character.builder(101).build(), Character.builder(103).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (v o i d)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(111).build(), Character.builder(105).build(), Character.builder(100).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (f i n a l l y)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(108).build(), Character.builder(121).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (n u l l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(117).build(), Character.builder(108).build(), Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (s t a c k a l l o c)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(99).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (n e w)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(101).build(), Character.builder(119).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (u n s a f e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(110).build(), Character.builder(115).build(), Character.builder(97).build(), Character.builder(102).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (t r y)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(121).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (e n u m)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(110).build(), Character.builder(117).build(), Character.builder(109).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (i f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(102).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (b y t e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(121).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (r e t u r n)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(116).build(), Character.builder(117).build(), Character.builder(114).build(), Character.builder(110).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (f a l s e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (u s h o r t)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(115).build(), Character.builder(104).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(116).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (i n t e r f a c e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(102).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (l o c k)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(111).build(), Character.builder(99).build(), Character.builder(107).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (e l s e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (i s)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(115).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (i n)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (c l a s s)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(108).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(115).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Keyword ::= (g o t o)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Keyword").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(103).build(), Character.builder(111).build(), Character.builder(116).build(), Character.builder(111).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// CharacterLiteral_ ::= ' Character '  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("CharacterLiteral_").build()).addSymbol(Character.builder(39).build()).addSymbol(Nonterminal.builder("Character").build()).addSymbol(Character.builder(39).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DPpElif ::= (#) Whitespace? (e l i f) SkippedSection  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DPpElif").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(102).build()).build()).build()).addSymbol(Nonterminal.builder("SkippedSection").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpIfSection ::= (#) Whitespace? (i f) Whitespace PpExpression PpNewLine SkippedSection?  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpIfSection").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(102).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("PpExpression").build()).addSymbol(Nonterminal.builder("PpNewLine").build()).addSymbol(Opt.builder(Nonterminal.builder("SkippedSection").build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// ConditionalSymbol ::= IdentifierOrKeyword \  ((t r u e) | (f a l s e)), !>>  (0-9 | A-Z | _ | a-z)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("ConditionalSymbol").build()).addSymbol(Nonterminal.builder("IdentifierOrKeyword").addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 90).build(), CharacterRange.builder(95, 95).build(), CharacterRange.builder(97, 122).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DPpGarbage ::= DPpElif* DPpElse? (#) Whitespace? (e n d i f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DPpGarbage").build()).addSymbol(Star.builder(Nonterminal.builder("DPpElif").build()).build()).addSymbol(Opt.builder(Nonterminal.builder("DPpElse").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(110).build(), Character.builder(100).build(), Character.builder(105).build(), Character.builder(102).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// InputSectionPart ::= PpDirective  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("InputSectionPart").build()).addSymbol(Nonterminal.builder("PpDirective").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// InputSectionPart ::= InputElement  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("InputSectionPart").build()).addSymbol(Nonterminal.builder("InputElement").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RightShiftAssignment ::= (> > =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RightShiftAssignment").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(62).build(), Character.builder(62).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// A ::= Id*  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("A").build()).addSymbol(Star.builder(Nonterminal.builder("Id").build()).build()).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// InputElement ::= Whitespace  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("InputElement").build()).addSymbol(Nonterminal.builder("Whitespace").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// InputElement ::= Comment  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("InputElement").build()).addSymbol(Nonterminal.builder("Comment").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// InputElement ::= Token  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("InputElement").build()).addSymbol(Nonterminal.builder("Token").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DPpElifSection ::= (#) Whitespace? (e l i f) Whitespace exp:PpExpression if (ppLookup(exp)) Layout else (SkippedSection (PpEndif | DPpElifSection | DPpElseSection))  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DPpElifSection").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(102).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("PpExpression").setLabel("exp").build()).addSymbol(IfThenElse.builder(AST.ppLookup(AST.var("exp")),Nonterminal.builder("Layout").build(),Sequence.builder(Nonterminal.builder("SkippedSection").build(), Alt.builder(Nonterminal.builder("PpEndif").build(), Nonterminal.builder("DPpElifSection").build(), Nonterminal.builder("DPpElseSection").build()).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Input ::= InputSection*  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Input").build()).addSymbol(Star.builder(Nonterminal.builder("InputSection").build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RegularStringLiteral ::= " RegularStringLiteralCharacter* "  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RegularStringLiteral").build()).addSymbol(Character.builder(34).build()).addSymbol(Star.builder(Nonterminal.builder("RegularStringLiteralCharacter").build()).build()).addSymbol(Character.builder(34).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SingleRegularStringLiteralCharacter ::= (\u0001-\u10FFFF)  \  ((\\u000A | \\u000D | " | \ | \u0085 | \u2028-\u2029))  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SingleRegularStringLiteralCharacter").build()).addSymbol(Alt.builder(CharacterRange.builder(1, 1114111).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Alt.builder(CharacterRange.builder(10, 10).build(), CharacterRange.builder(13, 13).build(), CharacterRange.builder(34, 34).build(), CharacterRange.builder(92, 92).build(), CharacterRange.builder(133, 133).build(), CharacterRange.builder(8232, 8233).build()).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RegularStringLiteralCharacter ::= SimpleEscapeSequence  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RegularStringLiteralCharacter").build()).addSymbol(Nonterminal.builder("SimpleEscapeSequence").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RegularStringLiteralCharacter ::= HexadecimalEscapeSequence  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RegularStringLiteralCharacter").build()).addSymbol(Nonterminal.builder("HexadecimalEscapeSequence").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RegularStringLiteralCharacter ::= SingleRegularStringLiteralCharacter  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RegularStringLiteralCharacter").build()).addSymbol(Nonterminal.builder("SingleRegularStringLiteralCharacter").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RegularStringLiteralCharacter ::= UnicodeEscapeSequence  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RegularStringLiteralCharacter").build()).addSymbol(Nonterminal.builder("UnicodeEscapeSequence").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpDiagnostic ::= (#) Whitespace? ((e r r o r) | (w a r n i n g)) PpMessage  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpDiagnostic").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Alt.builder(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(114).build(), Character.builder(114).build(), Character.builder(111).build(), Character.builder(114).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(119).build(), Character.builder(97).build(), Character.builder(114).build(), Character.builder(110).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build()).build()).addSymbol(Nonterminal.builder("PpMessage").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IdentifierOrKeyword ::= IdentifierStartCharacter IdentifierPartCharacter*  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IdentifierOrKeyword").build()).addSymbol(Nonterminal.builder("IdentifierStartCharacter").build()).addSymbol(Star.builder(Nonterminal.builder("IdentifierPartCharacter").build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DecimalDigitCharacter ::= (0-9)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DecimalDigitCharacter").build()).addSymbol(Alt.builder(CharacterRange.builder(48, 57).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// NullLiteral_ ::= (n u l l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("NullLiteral_").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(117).build(), Character.builder(108).build(), Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DPpIfSection ::= (#) Whitespace? (i f) Whitespace exp:PpExpression if (ppLookup(exp)) Layout else (SkippedSection (PpEndif | DPpElifSection | DPpElseSection))  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DPpIfSection").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(102).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("PpExpression").setLabel("exp").build()).addSymbol(IfThenElse.builder(AST.ppLookup(AST.var("exp")),Nonterminal.builder("Layout").build(),Sequence.builder(Nonterminal.builder("SkippedSection").build(), Alt.builder(Nonterminal.builder("PpEndif").build(), Nonterminal.builder("DPpElifSection").build(), Nonterminal.builder("DPpElseSection").build()).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Token ::= CharacterLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Token").build()).addSymbol(Nonterminal.builder("CharacterLiteral_").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Token ::= OperatorOrPunctuator  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Token").build()).addSymbol(Nonterminal.builder("OperatorOrPunctuator").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Token ::= StringLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Token").build()).addSymbol(Nonterminal.builder("StringLiteral_").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Token ::= Identifier  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Token").build()).addSymbol(Nonterminal.builder("Identifier").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Token ::=  !<<  (A-Z | a-z)RealLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Token").build()).addSymbol(Nonterminal.builder("RealLiteral_").addPreConditions(set(new RegularExpressionCondition(ConditionType.NOT_PRECEDE, Alt.builder(CharacterRange.builder(65, 90).build(), CharacterRange.builder(97, 122).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Token ::=  !<<  (A-Z | a-z)IntegerLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Token").build()).addSymbol(Nonterminal.builder("IntegerLiteral_").addPreConditions(set(new RegularExpressionCondition(ConditionType.NOT_PRECEDE, Alt.builder(CharacterRange.builder(65, 90).build(), CharacterRange.builder(97, 122).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Token ::= Keyword  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Token").build()).addSymbol(Nonterminal.builder("Keyword").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpPragma ::= (#) Whitespace? (p r a g m a) Whitespace PragmaBody  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpPragma").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(103).build(), Character.builder(109).build(), Character.builder(97).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("PragmaBody").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// $default$ ::=  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("$default$").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// WarningAction ::= (d i s a b l e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("WarningAction").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(105).build(), Character.builder(115).build(), Character.builder(97).build(), Character.builder(98).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// WarningAction ::= (r e s t o r e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("WarningAction").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(115).build(), Character.builder(116).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DelimitedCommentSection ::= (/)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DelimitedCommentSection").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(47).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DelimitedCommentSection ::= ** NotSlashOrAsterisk  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DelimitedCommentSection").build()).addSymbol(Star.builder(Character.builder(42).build()).build()).addSymbol(Nonterminal.builder("NotSlashOrAsterisk").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpPrimaryExpression ::= ConditionalSymbol  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpPrimaryExpression").build()).addSymbol(Nonterminal.builder("ConditionalSymbol").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpPrimaryExpression ::= (t r u e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpPrimaryExpression").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpPrimaryExpression ::= (f a l s e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpPrimaryExpression").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpPrimaryExpression ::= (() Whitespace? PpExpression Whitespace? ())  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpPrimaryExpression").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(40).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Nonterminal.builder("PpExpression").build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(41).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpRegion ::= PpStartRegion InputSection* PpEndRegion  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpRegion").build()).addSymbol(Nonterminal.builder("PpStartRegion").build()).addSymbol(Star.builder(Nonterminal.builder("InputSection").build()).build()).addSymbol(Nonterminal.builder("PpEndRegion").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Whitespace ::= (\u0009-\\u000A | \u000C-\\u000D | \u0020)+  !>>  (\u0009-\\u000A | \u000C-\\u000D | \u0020)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Whitespace").build()).addSymbol(Plus.builder(Alt.builder(CharacterRange.builder(9, 10).build(), CharacterRange.builder(12, 13).build(), CharacterRange.builder(32, 32).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(9, 10).build(), CharacterRange.builder(12, 13).build(), CharacterRange.builder(32, 32).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpEndif ::= (#) Whitespace? (e n d i f) PpNewLine  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpEndif").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(110).build(), Character.builder(100).build(), Character.builder(105).build(), Character.builder(102).build()).build()).build()).addSymbol(Nonterminal.builder("PpNewLine").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DecimalIntegerLiteral ::= DecimalDigit+ IntegerTypeSuffix  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DecimalIntegerLiteral").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).addSymbol(Nonterminal.builder("IntegerTypeSuffix").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DecimalIntegerLiteral ::= DecimalDigit+  !>>  (0-9 | D | F | L-M | U | X | d | f | l-m | u | x)  !>>  (u L)  !>>  (u l)  !>>  (U l)  !>>  (U L)  !>>  (l U)  !>>  (l u)  !>>  (L u)  !>>  (L U)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DecimalIntegerLiteral").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(68, 68).build(), CharacterRange.builder(70, 70).build(), CharacterRange.builder(76, 77).build(), CharacterRange.builder(85, 85).build(), CharacterRange.builder(88, 88).build(), CharacterRange.builder(100, 100).build(), CharacterRange.builder(102, 102).build(), CharacterRange.builder(108, 109).build(), CharacterRange.builder(117, 117).build(), CharacterRange.builder(120, 120).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(76).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(108).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(85).build(), Character.builder(108).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(85).build(), Character.builder(76).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(85).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(117).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(76).build(), Character.builder(117).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(76).build(), Character.builder(85).build()).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpElifSection ::= (#) Whitespace? (e l i f) Whitespace PpExpression PpNewLine SkippedSection?  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpElifSection").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(102).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("PpExpression").build()).addSymbol(Nonterminal.builder("PpNewLine").build()).addSymbol(Opt.builder(Nonterminal.builder("SkippedSection").build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PragmaWarningBody ::= (w a r n i n g) Whitespace WarningAction NewLine  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PragmaWarningBody").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(119).build(), Character.builder(97).build(), Character.builder(114).build(), Character.builder(110).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("WarningAction").build()).addSymbol(Nonterminal.builder("NewLine").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PragmaWarningBody ::= (w a r n i n g) Whitespace WarningAction Whitespace WarningList  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PragmaWarningBody").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(119).build(), Character.builder(97).build(), Character.builder(114).build(), Character.builder(110).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("WarningAction").build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("WarningList").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// BooleanLiteral_ ::= (t r u e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("BooleanLiteral_").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// BooleanLiteral_ ::= (f a l s e)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("BooleanLiteral_").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DPpElse ::= (#) Whitespace? (e l s e) SkippedSection  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DPpElse").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).addSymbol(Nonterminal.builder("SkippedSection").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// UnicodeEscapeSequence ::= (\ u) HexDigit HexDigit HexDigit HexDigit  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("UnicodeEscapeSequence").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(92).build(), Character.builder(117).build()).build()).build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// UnicodeEscapeSequence ::= (\ U) HexDigit HexDigit HexDigit HexDigit HexDigit HexDigit HexDigit HexDigit  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("UnicodeEscapeSequence").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(92).build(), Character.builder(85).build()).build()).build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpAndExpression ::= PpEqualityExpression  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpAndExpression").build()).addSymbol(Nonterminal.builder("PpEqualityExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// PpAndExpression ::= PpAndExpression Whitespace? (& &) Whitespace? PpEqualityExpression  {UNDEFINED,1,LEFT_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpAndExpression").build()).addSymbol(Nonterminal.builder("PpAndExpression").build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(38).build(), Character.builder(38).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Nonterminal.builder("PpEqualityExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.LEFT_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// SingleLineComment ::= (/ /) InputCharacter*  !>>  (\u0001-\u0009 | \u000B-\u000C | \u000E-\u10FFFF)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SingleLineComment").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(47).build(), Character.builder(47).build()).build()).build()).addSymbol(Star.builder(Nonterminal.builder("InputCharacter").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(1, 9).build(), CharacterRange.builder(11, 12).build(), CharacterRange.builder(14, 1114111).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SkippedSection ::= SkippedSectionPart+  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SkippedSection").build()).addSymbol(Plus.builder(Nonterminal.builder("SkippedSectionPart").build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Sign ::= (+ | -)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Sign").build()).addSymbol(Alt.builder(CharacterRange.builder(43, 43).build(), CharacterRange.builder(45, 45).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SingleCharacter ::= (\u0001-\u10FFFF)  \  ((\\u000A | \\u000D | ' | \ | \u0085 | \u2028-\u2029))  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SingleCharacter").build()).addSymbol(Alt.builder(CharacterRange.builder(1, 1114111).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Alt.builder(CharacterRange.builder(10, 10).build(), CharacterRange.builder(13, 13).build(), CharacterRange.builder(39, 39).build(), CharacterRange.builder(92, 92).build(), CharacterRange.builder(133, 133).build(), CharacterRange.builder(8232, 8233).build()).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// WarningList ::= DecimalDigit+  !>>  (0-9)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("WarningList").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// WarningList ::= WarningList Whitespace? (,) Whitespace? DecimalDigit+  !>>  (0-9)  {UNDEFINED,1,LEFT_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("WarningList").build()).addSymbol(Nonterminal.builder("WarningList").build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(44).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.LEFT_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(1).setPrecedenceLevel(PrecedenceLevel.from(1,1,1,false,true,false,false)).build())
//		// DecimalDigit ::= (0-9)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DecimalDigit").build()).addSymbol(Alt.builder(CharacterRange.builder(48, 57).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpMessage ::= InputCharacter* NewLine  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpMessage").build()).addSymbol(Star.builder(Nonterminal.builder("InputCharacter").build()).build()).addSymbol(Nonterminal.builder("NewLine").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RealLiteral_ ::= DecimalDigit+ (.) DecimalDigit+ ExponentPart? RealTypeSuffix  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RealLiteral_").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(46).build()).build()).build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).addSymbol(Opt.builder(Nonterminal.builder("ExponentPart").build()).build()).addSymbol(Nonterminal.builder("RealTypeSuffix").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RealLiteral_ ::= DecimalDigit+ (.) DecimalDigit+  !>>  (0-9) ExponentPart?  !>>  (D | F | M | d | f | m)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RealLiteral_").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(46).build()).build()).build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build()).build()))).build()).addSymbol(Opt.builder(Nonterminal.builder("ExponentPart").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(68, 68).build(), CharacterRange.builder(70, 70).build(), CharacterRange.builder(77, 77).build(), CharacterRange.builder(100, 100).build(), CharacterRange.builder(102, 102).build(), CharacterRange.builder(109, 109).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RealLiteral_ ::= DecimalDigit+ ExponentPart RealTypeSuffix?  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RealLiteral_").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).addSymbol(Nonterminal.builder("ExponentPart").build()).addSymbol(Opt.builder(Nonterminal.builder("RealTypeSuffix").build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RealLiteral_ ::= (.)  !<<  (0-9) DecimalDigit+  !>>  (0-9) ExponentPart?  !>>  (D | F | M | d | f | m)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RealLiteral_").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(46).build()).build()).addPreConditions(set(new RegularExpressionCondition(ConditionType.NOT_PRECEDE, Alt.builder(CharacterRange.builder(48, 57).build()).build()))).build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build()).build()))).build()).addSymbol(Opt.builder(Nonterminal.builder("ExponentPart").build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(68, 68).build(), CharacterRange.builder(70, 70).build(), CharacterRange.builder(77, 77).build(), CharacterRange.builder(100, 100).build(), CharacterRange.builder(102, 102).build(), CharacterRange.builder(109, 109).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RealLiteral_ ::= (.)  !<<  (0-9) DecimalDigit+ ExponentPart? RealTypeSuffix !>>  (D | F | M | d | f | m)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RealLiteral_").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(46).build()).build()).addPreConditions(set(new RegularExpressionCondition(ConditionType.NOT_PRECEDE, Alt.builder(CharacterRange.builder(48, 57).build()).build()))).build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).addSymbol(Opt.builder(Nonterminal.builder("ExponentPart").build()).build()).addSymbol(Nonterminal.builder("RealTypeSuffix").addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(68, 68).build(), CharacterRange.builder(70, 70).build(), CharacterRange.builder(77, 77).build(), CharacterRange.builder(100, 100).build(), CharacterRange.builder(102, 102).build(), CharacterRange.builder(109, 109).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RealLiteral_ ::= DecimalDigit+ RealTypeSuffix  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RealLiteral_").build()).addSymbol(Plus.builder(Nonterminal.builder("DecimalDigit").build()).build()).addSymbol(Nonterminal.builder("RealTypeSuffix").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Identifier ::= (@) IdentifierOrKeyword !>>  (0-9 | A-Z | _ | a-z)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Identifier").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(64).build()).build()).build()).addSymbol(Nonterminal.builder("IdentifierOrKeyword").addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 90).build(), CharacterRange.builder(95, 95).build(), CharacterRange.builder(97, 122).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Identifier ::=  !<<  (A-Z | _ | a-z)IdentifierOrKeyword \  ((t h i s) | (r e f) | (a s) | (s t r u c t) | (b y t e) | (i n t) | (s t a c k a l l o c) | (o v e r r i d e) | (s b y t e) | (c a t c h) | (n a m e s p a c e) | (t r y) | (u i n t) | (e v e n t) | (i n t e r f a c e) | (e l s e) | (c l a s s) | (s i z e o f) | (o b j e c t) | (b r e a k) | (i n t e r n a l) | (i f) | (s e a l e d) | (f l o a t) | (l o n g) | (v o l a t i l e) | (s h o r t) | (d e c i m a l) | (w h i l e) | (d o u b l e) | (b a s e) | (t y p e o f) | (u l o n g) | (s t r i n g) | (c a s e) | (r e t u r n) | (c h a r) | (f i x e d) | (s w i t c h) | (e x p l i c i t) | (v o i d) | (v i r t u a l) | (l o c k) | (d o) | (f o r e a c h) | (b o o l) | (i s) | (p u b l i c) | (f o r) | (o u t) | (p r o t e c t e d) | (s t a t i c) | (u n c h e c k e d) | (t r u e) | (c o n s t) | (g o t o) | (f a l s e) | (f i n a l l y) | (p r i v a t e) | (r e a d o n l y) | (a b s t r a c t) | (d e f a u l t) | (e n u m) | (e x t e r n) | (n e w) | (c h e c k e d) | (u s h o r t) | (n u l l) | (c o n t i n u e) | (t h r o w) | (p a r a m s) | (u n s a f e) | (i n) | (i m p l i c i t) | (d e l e g a t e) | (u s i n g) | (o p e r a t o r)), !>>  (0-9 | A-Z | _ | a-z)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Identifier").build()).addSymbol(Nonterminal.builder("IdentifierOrKeyword").addPreConditions(set(new RegularExpressionCondition(ConditionType.NOT_PRECEDE, Alt.builder(CharacterRange.builder(65, 90).build(), CharacterRange.builder(95, 95).build(), CharacterRange.builder(97, 122).build()).build()))).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(104).build(), Character.builder(105).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(97).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(121).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(99).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(118).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(100).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(98).build(), Character.builder(121).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(97).build(), Character.builder(109).build(), Character.builder(101).build(), Character.builder(115).build(), Character.builder(112).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(121).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(118).build(), Character.builder(101).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(102).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(108).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(105).build(), Character.builder(122).build(), Character.builder(101).build(), Character.builder(111).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(98).build(), Character.builder(106).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(107).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(110).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(97).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(111).build(), Character.builder(108).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(104).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(109).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(119).build(), Character.builder(104).build(), Character.builder(105).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(111).build(), Character.builder(117).build(), Character.builder(98).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(121).build(), Character.builder(112).build(), Character.builder(101).build(), Character.builder(111).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(116).build(), Character.builder(117).build(), Character.builder(114).build(), Character.builder(110).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(104).build(), Character.builder(97).build(), Character.builder(114).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(105).build(), Character.builder(120).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(119).build(), Character.builder(105).build(), Character.builder(116).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(120).build(), Character.builder(112).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(111).build(), Character.builder(105).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(105).build(), Character.builder(114).build(), Character.builder(116).build(), Character.builder(117).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(111).build(), Character.builder(99).build(), Character.builder(107).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(111).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(111).build(), Character.builder(111).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(117).build(), Character.builder(98).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(111).build(), Character.builder(114).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(117).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(114).build(), Character.builder(111).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(99).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(110).build(), Character.builder(99).build(), Character.builder(104).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(115).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(103).build(), Character.builder(111).build(), Character.builder(116).build(), Character.builder(111).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(108).build(), Character.builder(121).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(118).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(100).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(108).build(), Character.builder(121).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(97).build(), Character.builder(98).build(), Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(102).build(), Character.builder(97).build(), Character.builder(117).build(), Character.builder(108).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(110).build(), Character.builder(117).build(), Character.builder(109).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(120).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(110).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(101).build(), Character.builder(119).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(104).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(115).build(), Character.builder(104).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(117).build(), Character.builder(108).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(104).build(), Character.builder(114).build(), Character.builder(111).build(), Character.builder(119).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(97).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(109).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(110).build(), Character.builder(115).build(), Character.builder(97).build(), Character.builder(102).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(109).build(), Character.builder(112).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(108).build(), Character.builder(101).build(), Character.builder(103).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(115).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(112).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(111).build(), Character.builder(114).build()).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 90).build(), CharacterRange.builder(95, 95).build(), CharacterRange.builder(97, 122).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// NewLine ::= (\\u000A | \\u000D)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("NewLine").build()).addSymbol(Alt.builder(CharacterRange.builder(10, 10).build(), CharacterRange.builder(13, 13).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (U l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(85).build(), Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (u L)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(76).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (L u)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(76).build(), Character.builder(117).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (l U)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(85).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (U L)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(85).build(), Character.builder(76).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (u l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (L)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(76).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (U)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(85).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (l)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(108).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (u)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(117).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (L U)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(76).build(), Character.builder(85).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// IntegerTypeSuffix ::= (l u)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("IntegerTypeSuffix").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(117).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PragmaBody ::= PragmaWarningBody  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PragmaBody").build()).addSymbol(Nonterminal.builder("PragmaWarningBody").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Character ::= HexadecimalEscapeSequence  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Character").build()).addSymbol(Nonterminal.builder("HexadecimalEscapeSequence").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Character ::= SimpleEscapeSequence  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Character").build()).addSymbol(Nonterminal.builder("SimpleEscapeSequence").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Character ::= SingleCharacter  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Character").build()).addSymbol(Nonterminal.builder("SingleCharacter").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Character ::= UnicodeEscapeSequence  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Character").build()).addSymbol(Nonterminal.builder("UnicodeEscapeSequence").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// StringLiteral_ ::= RegularStringLiteral  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("StringLiteral_").build()).addSymbol(Nonterminal.builder("RegularStringLiteral").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// StringLiteral_ ::= VerbatimStringLiteral  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("StringLiteral_").build()).addSymbol(Nonterminal.builder("VerbatimStringLiteral").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpDirective ::= PpConditional  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpDirective").build()).addSymbol(Nonterminal.builder("PpConditional").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpDirective ::= PpRegion  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpDirective").build()).addSymbol(Nonterminal.builder("PpRegion").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpDirective ::= PpDiagnostic  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpDirective").build()).addSymbol(Nonterminal.builder("PpDiagnostic").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpDirective ::= PpLine  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpDirective").build()).addSymbol(Nonterminal.builder("PpLine").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpDirective ::= PpPragma  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpDirective").build()).addSymbol(Nonterminal.builder("PpPragma").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpDirective ::= PpDeclaration  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpDirective").build()).addSymbol(Nonterminal.builder("PpDeclaration").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RightShift ::= (> >)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RightShift").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(62).build(), Character.builder(62).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DelimitedComment ::= (/ *) DelimitedCommentSection* *+ (/)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DelimitedComment").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(47).build(), Character.builder(42).build()).build()).build()).addSymbol(Star.builder(Nonterminal.builder("DelimitedCommentSection").build()).build()).addSymbol(Plus.builder(Character.builder(42).build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(47).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// RealTypeSuffix ::= (D | F | M | d | f | m)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("RealTypeSuffix").build()).addSymbol(Alt.builder(CharacterRange.builder(68, 68).build(), CharacterRange.builder(70, 70).build(), CharacterRange.builder(77, 77).build(), CharacterRange.builder(100, 100).build(), CharacterRange.builder(102, 102).build(), CharacterRange.builder(109, 109).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Literal_ ::= CharacterLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Literal_").build()).addSymbol(Nonterminal.builder("CharacterLiteral_").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Literal_ ::= BooleanLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Literal_").build()).addSymbol(Nonterminal.builder("BooleanLiteral_").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Literal_ ::= RealLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Literal_").build()).addSymbol(Nonterminal.builder("RealLiteral_").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Literal_ ::= IntegerLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Literal_").build()).addSymbol(Nonterminal.builder("IntegerLiteral_").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Literal_ ::= StringLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Literal_").build()).addSymbol(Nonterminal.builder("StringLiteral_").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Literal_ ::= NullLiteral_  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Literal_").build()).addSymbol(Nonterminal.builder("NullLiteral_").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpLine ::= (#) Whitespace? (l i n e) Whitespace LineIndicator PpNewLine  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpLine").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(101).build()).build()).build()).addSymbol(Nonterminal.builder("Whitespace").build()).addSymbol(Nonterminal.builder("LineIndicator").build()).addSymbol(Nonterminal.builder("PpNewLine").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// FileName ::= (") FileNameCharacter+ (")  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("FileName").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(34).build()).build()).build()).addSymbol(Plus.builder(Nonterminal.builder("FileNameCharacter").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(34).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// SingleVerbatimStringLiteralCharacter ::= (\u0001-\u10FFFF)  \  (")  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("SingleVerbatimStringLiteralCharacter").build()).addSymbol(Alt.builder(CharacterRange.builder(1, 1114111).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Character.builder(34).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpElseSection ::= (#) Whitespace? (e l s e) PpNewLine SkippedSection?  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpElseSection").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).addSymbol(Nonterminal.builder("PpNewLine").build()).addSymbol(Opt.builder(Nonterminal.builder("SkippedSection").build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpExpression ::= PpOrExpression  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpExpression").build()).addSymbol(Nonterminal.builder("PpOrExpression").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpEndRegion ::= (#) Whitespace? (e n d r e g i o n) PpMessage  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpEndRegion").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(110).build(), Character.builder(100).build(), Character.builder(114).build(), Character.builder(101).build(), Character.builder(103).build(), Character.builder(105).build(), Character.builder(111).build(), Character.builder(110).build()).build()).build()).addSymbol(Nonterminal.builder("PpMessage").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpConditional ::= PpIfSection PpElifSection* PpElseSection? PpEndif  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpConditional").build()).addSymbol(Nonterminal.builder("PpIfSection").build()).addSymbol(Star.builder(Nonterminal.builder("PpElifSection").build()).build()).addSymbol(Opt.builder(Nonterminal.builder("PpElseSection").build()).build()).addSymbol(Nonterminal.builder("PpEndif").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// DPpElseSection ::= (#) Whitespace? (e l s e) Layout  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("DPpElseSection").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build()).addSymbol(Nonterminal.builder("Layout").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Id ::=  !<<  (A-Z | _ | a-z)IdentifierOrKeyword \  ((t h i s) | (r e f) | (a s) | (s t r u c t) | (b y t e) | (i n t) | (s t a c k a l l o c) | (o v e r r i d e) | (s b y t e) | (c a t c h) | (n a m e s p a c e) | (t r y) | (u i n t) | (e v e n t) | (i n t e r f a c e) | (e l s e) | (c l a s s) | (s i z e o f) | (o b j e c t) | (b r e a k) | (i n t e r n a l) | (i f) | (s e a l e d) | (f l o a t) | (l o n g) | (v o l a t i l e) | (s h o r t) | (d e c i m a l) | (w h i l e) | (d o u b l e) | (b a s e) | (t y p e o f) | (u l o n g) | (s t r i n g) | (c a s e) | (r e t u r n) | (c h a r) | (f i x e d) | (s w i t c h) | (e x p l i c i t) | (v o i d) | (v i r t u a l) | (l o c k) | (d o) | (f o r e a c h) | (b o o l) | (i s) | (p u b l i c) | (f o r) | (o u t) | (p r o t e c t e d) | (s t a t i c) | (u n c h e c k e d) | (t r u e) | (c o n s t) | (g o t o) | (f a l s e) | (f i n a l l y) | (p r i v a t e) | (r e a d o n l y) | (a b s t r a c t) | (d e f a u l t) | (e n u m) | (e x t e r n) | (n e w) | (c h e c k e d) | (u s h o r t) | (n u l l) | (c o n t i n u e) | (t h r o w) | (p a r a m s) | (u n s a f e) | (i n) | (i m p l i c i t) | (d e l e g a t e) | (u s i n g) | (o p e r a t o r)), !>>  (0-9 | A-Z | _ | a-z)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Id").build()).addSymbol(Nonterminal.builder("IdentifierOrKeyword").addPreConditions(set(new RegularExpressionCondition(ConditionType.NOT_PRECEDE, Alt.builder(CharacterRange.builder(65, 90).build(), CharacterRange.builder(95, 95).build(), CharacterRange.builder(97, 122).build()).build()))).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_MATCH, Alt.builder(Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(104).build(), Character.builder(105).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(97).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(121).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(99).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(118).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(100).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(98).build(), Character.builder(121).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(97).build(), Character.builder(109).build(), Character.builder(101).build(), Character.builder(115).build(), Character.builder(112).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(121).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(118).build(), Character.builder(101).build(), Character.builder(110).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(102).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(108).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(105).build(), Character.builder(122).build(), Character.builder(101).build(), Character.builder(111).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(98).build(), Character.builder(106).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(107).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(110).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(97).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(111).build(), Character.builder(108).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(104).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(109).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(119).build(), Character.builder(104).build(), Character.builder(105).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(111).build(), Character.builder(117).build(), Character.builder(98).build(), Character.builder(108).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(121).build(), Character.builder(112).build(), Character.builder(101).build(), Character.builder(111).build(), Character.builder(102).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(108).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(97).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(116).build(), Character.builder(117).build(), Character.builder(114).build(), Character.builder(110).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(104).build(), Character.builder(97).build(), Character.builder(114).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(105).build(), Character.builder(120).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(119).build(), Character.builder(105).build(), Character.builder(116).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(120).build(), Character.builder(112).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(111).build(), Character.builder(105).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(118).build(), Character.builder(105).build(), Character.builder(114).build(), Character.builder(116).build(), Character.builder(117).build(), Character.builder(97).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(108).build(), Character.builder(111).build(), Character.builder(99).build(), Character.builder(107).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(111).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(104).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(98).build(), Character.builder(111).build(), Character.builder(111).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(117).build(), Character.builder(98).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(111).build(), Character.builder(114).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(117).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(114).build(), Character.builder(111).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(115).build(), Character.builder(116).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(99).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(110).build(), Character.builder(99).build(), Character.builder(104).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(114).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(115).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(103).build(), Character.builder(111).build(), Character.builder(116).build(), Character.builder(111).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(115).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(102).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(97).build(), Character.builder(108).build(), Character.builder(108).build(), Character.builder(121).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(114).build(), Character.builder(105).build(), Character.builder(118).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(97).build(), Character.builder(100).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(108).build(), Character.builder(121).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(97).build(), Character.builder(98).build(), Character.builder(115).build(), Character.builder(116).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(99).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(102).build(), Character.builder(97).build(), Character.builder(117).build(), Character.builder(108).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(110).build(), Character.builder(117).build(), Character.builder(109).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(101).build(), Character.builder(120).build(), Character.builder(116).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(110).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(101).build(), Character.builder(119).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(104).build(), Character.builder(101).build(), Character.builder(99).build(), Character.builder(107).build(), Character.builder(101).build(), Character.builder(100).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(115).build(), Character.builder(104).build(), Character.builder(111).build(), Character.builder(114).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(110).build(), Character.builder(117).build(), Character.builder(108).build(), Character.builder(108).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(99).build(), Character.builder(111).build(), Character.builder(110).build(), Character.builder(116).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(117).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(116).build(), Character.builder(104).build(), Character.builder(114).build(), Character.builder(111).build(), Character.builder(119).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(112).build(), Character.builder(97).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(109).build(), Character.builder(115).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(110).build(), Character.builder(115).build(), Character.builder(97).build(), Character.builder(102).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(110).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(105).build(), Character.builder(109).build(), Character.builder(112).build(), Character.builder(108).build(), Character.builder(105).build(), Character.builder(99).build(), Character.builder(105).build(), Character.builder(116).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(100).build(), Character.builder(101).build(), Character.builder(108).build(), Character.builder(101).build(), Character.builder(103).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(101).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(117).build(), Character.builder(115).build(), Character.builder(105).build(), Character.builder(110).build(), Character.builder(103).build()).build()).build(), Terminal.builder(Sequence.builder(Character.builder(111).build(), Character.builder(112).build(), Character.builder(101).build(), Character.builder(114).build(), Character.builder(97).build(), Character.builder(116).build(), Character.builder(111).build(), Character.builder(114).build()).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 90).build(), CharacterRange.builder(95, 95).build(), CharacterRange.builder(97, 122).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// InputSection ::= InputSectionPart  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("InputSection").build()).addSymbol(Nonterminal.builder("InputSectionPart").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (?)  !>>  ?  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(63).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(63).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (:)  !>>  :  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(58).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(58).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (* =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(42).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (-)  !>>  (- | =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(45).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(45, 45).build(), CharacterRange.builder(61, 61).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (% = :)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(37).build(), Character.builder(61).build(), Character.builder(58).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (/)  !>>  (* | / | =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(47).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(42, 42).build(), CharacterRange.builder(47, 47).build(), CharacterRange.builder(61, 61).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (? ?)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(63).build(), Character.builder(63).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (+)  !>>  (+ | =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(43).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(43, 43).build(), CharacterRange.builder(61, 61).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (< < =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(60).build(), Character.builder(60).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (>)  !>>  =  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(62).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(61).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (%)  !>>  =  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(37).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(61).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (!)  !>>  =  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(33).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(61).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (^)  !>>  =  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(94).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(61).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (& &)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(38).build(), Character.builder(38).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (! =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(33).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (;)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(59).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= ())  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(41).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (,)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(44).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (()  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(40).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= ({)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(123).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (})  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(125).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (~)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(126).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (*)  !>>  (* | =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(42).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(42, 42).build(), CharacterRange.builder(61, 61).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= ([)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(91).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (])  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(93).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (<)  !>>  (<-=)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(60).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(60, 61).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (- >)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(45).build(), Character.builder(62).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (- -)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(45).build(), Character.builder(45).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (- =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(45).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (&)  !>>  (& | =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(38).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(38, 38).build(), CharacterRange.builder(61, 61).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (.)  !>>  (0-9)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(46).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (& =)  !>>  :  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(38).build(), Character.builder(61).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(58).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (/ =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(47).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (+ +)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(43).build(), Character.builder(43).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (+ =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(43).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (> =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(62).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (= =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(61).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (= >)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(61).build(), Character.builder(62).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (^ =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(94).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (| |)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(124).build(), Character.builder(124).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (< =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(60).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (|)  !>>  (= | |)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(124).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(61, 61).build(), CharacterRange.builder(124, 124).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (< <)  !>>  =  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(60).build(), Character.builder(60).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(61).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (=)  !>>  (=->)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(61).build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(61, 62).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (| =)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(124).build(), Character.builder(61).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// OperatorOrPunctuator ::= (: :)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("OperatorOrPunctuator").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(58).build(), Character.builder(58).build()).build()).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// Layout ::= (DPpGarbage | PpLine | PpStartRegion | PpDeclaration | Whitespace | PpPragma | Comment | DPpConditional | PpDiagnostic | PpEndRegion)*  !>>  (/ /)  !>>  (/ *)  !>>  (\u0009-\\u000A | \u000C-\\u000D | \u0020)  !>>  (#)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("Layout").build()).addSymbol(Star.builder(Alt.builder(Nonterminal.builder("DPpGarbage").build(), Nonterminal.builder("PpLine").build(), Nonterminal.builder("PpStartRegion").build(), Nonterminal.builder("PpDeclaration").build(), Nonterminal.builder("Whitespace").build(), Nonterminal.builder("PpPragma").build(), Nonterminal.builder("Comment").build(), Nonterminal.builder("DPpConditional").build(), Nonterminal.builder("PpDiagnostic").build(), Nonterminal.builder("PpEndRegion").build()).build()).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(47).build(), Character.builder(47).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(47).build(), Character.builder(42).build()).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(9, 10).build(), CharacterRange.builder(12, 13).build(), CharacterRange.builder(32, 32).build()).build()), new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// HexadecimalEscapeSequence ::= (\ x) HexDigit !>>  (0-9 | A-F | a-f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("HexadecimalEscapeSequence").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(92).build(), Character.builder(120).build()).build()).build()).addSymbol(Nonterminal.builder("HexDigit").addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 70).build(), CharacterRange.builder(97, 102).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// HexadecimalEscapeSequence ::= (\ x) HexDigit HexDigit HexDigit HexDigit  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("HexadecimalEscapeSequence").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(92).build(), Character.builder(120).build()).build()).build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// HexadecimalEscapeSequence ::= (\ x) HexDigit HexDigit HexDigit !>>  (0-9 | A-F | a-f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("HexadecimalEscapeSequence").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(92).build(), Character.builder(120).build()).build()).build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 70).build(), CharacterRange.builder(97, 102).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// HexadecimalEscapeSequence ::= (\ x) HexDigit HexDigit !>>  (0-9 | A-F | a-f)  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("HexadecimalEscapeSequence").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(92).build(), Character.builder(120).build()).build()).build()).addSymbol(Nonterminal.builder("HexDigit").build()).addSymbol(Nonterminal.builder("HexDigit").addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Alt.builder(CharacterRange.builder(48, 57).build(), CharacterRange.builder(65, 70).build(), CharacterRange.builder(97, 102).build()).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// PpStartRegion ::= (#) Whitespace? (r e g i o n) PpMessage  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("PpStartRegion").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(35).build()).build()).build()).addSymbol(Opt.builder(Nonterminal.builder("Whitespace").build()).build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(114).build(), Character.builder(101).build(), Character.builder(103).build(), Character.builder(105).build(), Character.builder(111).build(), Character.builder(110).build()).build()).build()).addSymbol(Nonterminal.builder("PpMessage").build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		// VerbatimStringLiteral ::= (@) " VerbatimStringLiteralCharacter* "  !>>  "  {UNDEFINED,-1,NON_REC} PREC(1,1)
//		.addRule(Rule.withHead(Nonterminal.builder("VerbatimStringLiteral").build()).addSymbol(Terminal.builder(Sequence.builder(Character.builder(64).build()).build()).build()).addSymbol(Character.builder(34).build()).addSymbol(Star.builder(Nonterminal.builder("VerbatimStringLiteralCharacter").build()).build()).addSymbol(Character.builder(34).addPostConditions(set(new RegularExpressionCondition(ConditionType.NOT_FOLLOW, Character.builder(34).build()))).build()).setLayoutStrategy(NO_LAYOUT).setRecursion(Recursion.NON_REC).setAssociativity(Associativity.UNDEFINED).setPrecedence(-1).setPrecedenceLevel(PrecedenceLevel.from(1,1,-1,false,false,false,false)).build())
//		.build();
//}
